Message ::= Declaration* Variant+

/* Aliases and selectors */
Declaration ::= Alias? '{' Expression '}' '?'?
Alias ::= Variable '='

/* Pattern and pattern elements */
Variant ::= VariantKey* Pattern
VariantKey ::= Symbol | String
Pattern ::= '[' (Text | Placeable)* ']' /* ws: explicit */
Placeable ::= '{' Expression '}'

/* Expressions */
Expression ::= Operand Function?
Operand ::= (Symbol | String | Variable)
Function ::= Symbol Option*
Option ::= Symbol '=' (Symbol | String | Variable)

/* Ignored tokens */
Ignore ::= Comment | WhiteSpace /* ws: definition */

<?TOKENS?>

/* Names */
Variable ::= '$' Symbol /* ws: explicit */
Symbol ::= SymbolChar+
SymbolChar ::= [a-zA-Z] | [0-9] | "_" | "-" | "." | #xB7
             | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF]
             | [#x300-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D]
	     | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF]
	     | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD]
	     | [#x10000-#xEFFFF]

/* Text */
Text ::= (TextChar | TextEscape)+
TextChar ::= AnyChar - (']' | '{' | Esc)
AnyChar ::= .

/* Literals */
String ::= '"' (StringChar | StringEscape)* '"' /* ws: explicit */
StringChar ::= AnyChar - ('"'| Esc)

/* Escape sequences */
Esc ::= '\'
TextEscape ::= Esc ']' | Esc '{' | UnicodeEscape
StringEscape ::= Esc '"' | UnicodeEscape
UnicodeEscape ::= Esc 'u' HexDigit HexDigit HexDigit HexDigit
                | Esc 'U' HexDigit HexDigit HexDigit HexDigit HexDigit HexDigit
HexDigit ::= [0-9a-fA-F]

/* Comments */
Comment ::= '/*' (AnyChar* - (AnyChar* '*/' AnyChar*)) '*/'

/* WhiteSpace */
WhiteSpace ::= #x9 | #xD | #xA | #x20
